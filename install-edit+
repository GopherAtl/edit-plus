if not http then
  error("http api required.")
end

local branch="master"

local args={...}

local verToBranch={release="master",beta="dev"}

local bindir, apidir, cfgdir=""

local function fixDir(dir)
  local d=dir:match("^(.-)[/|\\]?$")
  return d
end

for i=1,#args do
  local arg,val=args[i]:match("-(%w+)=?(.*)")
  if arg then
    arg=arg:lower()
    if arg=="ver" then
      if val then
        val=val:lower()
        if verToBranch[val] then
          branch=verToBranch[val]
        else
          error("invalid version '"..val.."'")
        end
      else
        error("Must specify a version 'release' or 'beta' to argument 'ver'!")
      end
    elseif arg=="apidir" then
      if fs.exists(val) then
        apidir=fixDir(val)
      else
        error("Specified apidir does not exist!")
      end
    elseif arg=="bindir" then
      if fs.exists(val) then
        bindir=fixDir(val)
      else
        error("Specified apidir does not exist!")
      end
    elseif arg=="cfgdir" then
      if fs.exists(val) then
        cfgdir=fixDir(val)
      else
        error("specified cfgdir does not exist!")
      end
    else
      error("unknown argument '"..arg.."'")
    end
  end
end

function grabFileText(name)
  write("downloading '"..name.."'...")
  local path=(targetDir or shell.dir()).."/"
  local req=http.get("https://raw.githubusercontent.com/GopherAtl/edit-plus/"..branch.."/"..name)
  if req==nil then
    error("Cound't make request!")
  end

  if req.getResponseCode()~=200 then
    req.close()
    error("Unexpected response code "..req.getResponseCode())
  end

  local text=req.readAll()

  req.close()
  return text
end

function grabFile(name,targetDir)

  local text=grabFileText(name)

  local file=fs.open(path..name,"w")
  if not file then
    error("Couldn't open file '"..name.."' for writing!")
  end

  file.write(text)
  file.close()
  print("success! "..#text.." bytes")
end


apidir=apidir or bindir
cfgdir=cfgdir or bindir

local req=http.get("https://raw.githubusercontent.com/GopherAtl/edit-plus/"..branch.."/"..name)

local filelist=grabFileText("filelist")
for type,file in filelist:gmatch("(...):(%S-)") do
  grabFile(file,type=="bin" and bindir or apidir)
end

--grabFile("edit+",bindir)
--grabFile("hilight",apidir)
--grabFile("guiutils",apidir)
--grabFile("document",apidir)

local settings = {
  recentFiles = { },
  syntaxStyle = "pastebin",
  bindir=bindir,
  apidir=apidir,
  cfgdir=cfgdir,
}


local file=fs.open(cfgdir.."/.edit+","w")
if not file then
  error("Error!","Couldn't open settings file to write!")
else
  file.write(textutils.serialize(settings))
  file.close()
end
